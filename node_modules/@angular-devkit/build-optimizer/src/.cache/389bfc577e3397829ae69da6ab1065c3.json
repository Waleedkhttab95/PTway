{"remainingRequest":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es7.reflect.delete-metadata.js","dependencies":[{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es7.reflect.delete-metadata.js","mtime":1551967142264},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551967139121},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1551967102511}],"contextDependencies":[],"result":["var metadata               = require('./_metadata')\r\n  , anObject               = require('./_an-object')\r\n  , toMetaKey              = metadata.key\r\n  , getOrCreateMetadataMap = metadata.map\r\n  , store                  = metadata.store;\r\n\r\nmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\r\n  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\r\n    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\r\n  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\r\n  if(metadataMap.size)return true;\r\n  var targetMetadata = store.get(target);\r\n  targetMetadata['delete'](targetKey);\r\n  return !!targetMetadata.size || store['delete'](target);\r\n}});",null]}