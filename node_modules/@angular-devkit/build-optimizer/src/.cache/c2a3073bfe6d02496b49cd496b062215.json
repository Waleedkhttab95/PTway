{"remainingRequest":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es6.date.to-string.js","dependencies":[{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es6.date.to-string.js","mtime":1551967142032},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551967139121},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1551967102511}],"contextDependencies":[],"result":["var DateProto    = Date.prototype\r\n  , INVALID_DATE = 'Invalid Date'\r\n  , TO_STRING    = 'toString'\r\n  , $toString    = DateProto[TO_STRING]\r\n  , getTime      = DateProto.getTime;\r\nif(new Date(NaN) + '' != INVALID_DATE){\r\n  require('./_redefine')(DateProto, TO_STRING, function toString(){\r\n    var value = getTime.call(this);\r\n    return value === value ? $toString.call(this) : INVALID_DATE;\r\n  });\r\n}",null]}