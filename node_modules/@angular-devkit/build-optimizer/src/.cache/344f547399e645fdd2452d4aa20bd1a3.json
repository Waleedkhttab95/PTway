{"remainingRequest":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es6.array.find-index.js","dependencies":[{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\core-js\\modules\\es6.array.find-index.js","mtime":1551967141998},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551967139121},{"path":"C:\\Users\\Asus\\Documents\\GitHub\\PTway-Angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1551967102511}],"contextDependencies":[],"result":["'use strict';\r\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\r\nvar $export = require('./_export')\r\n  , $find   = require('./_array-methods')(6)\r\n  , KEY     = 'findIndex'\r\n  , forced  = true;\r\n// Shouldn't skip holes\r\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\r\n$export($export.P + $export.F * forced, 'Array', {\r\n  findIndex: function findIndex(callbackfn/*, that = undefined */){\r\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\r\n  }\r\n});\r\nrequire('./_add-to-unscopables')(KEY);",null]}