{"version":3,"sources":["webpack:///./src/app/add-job/add-job.component.css","webpack:///./src/app/add-job/add-job.component.html","webpack:///./src/app/add-job/add-job.component.ts","webpack:///./src/app/add-job/add-job.module.ts","webpack:///./src/app/add-job/add-job.routing.ts","webpack:///./src/app/add-job/job.service.ts"],"names":[],"mappings":"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","file":"add-job-add-job-module.js","sourcesContent":["module.exports = \".card [class*=\\\"card-header-\\\"] .card-icon{\\n    margin-left: 15px;\\n    float: right;\\n}\\n.custom-title{\\n    text-align: right;\\n}\\n.mat-form-field{\\n    text-align: right;\\n}\\n.mat-option{\\n    text-align: right;\\n}\\n.mat-option.mat-selected:hover{\\n    background-color: #3f51b5 !important;\\n}\\n.mat-option:hover {\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(22, 44, 243, 0.4);\\n    background: #3f51b5!important;\\n    color: #fff !important;\\n}\\n.mat-option.mat-selected:not(.mat-option-multiple) {\\n    background-color: #3f51b5 !important;\\n    color: #fff !important;\\n}\\n.mat-option.mat-selected:not(.mat-option-multiple) {\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(22, 44, 243, 0.4);\\n}\\n.custom-card{\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n.custom-label{\\n    float: right;\\n}\\n::ng-deep .btn-primary{\\n    margin-right: auto;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-primary card-header-icon\\\">\\n            <div class=\\\"card-icon\\\">\\n              <i class=\\\"material-icons\\\">portrait</i>\\n            </div>\\n            <h4 class=\\\"card-title custom-title\\\">اضافة عرض عمل</h4>\\n          </div>\\n          <div class=\\\"col-md-8 custom-card\\\">\\n            <div class=\\\"card-body\\\">\\n              <form (ngSubmit)=\\\"postuserinfo()\\\" [formGroup]=\\\"addProjcetForm\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- نوع التعاقد</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"اختر التعاقد...\\\" [formControl]=\\\"contract\\\" name=\\\"contract\\\">\\n                        <mat-option *ngFor=\\\"let contract of contracts\\\" [value]=\\\"contract.value\\\">\\n                          {{contract.viewValue}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- المشروع</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"اختر المشروع...\\\" [formControl]=\\\"project\\\" name=\\\"project\\\">\\n                        <mat-option *ngFor=\\\"let project of projects\\\" [value]=\\\"project.value\\\">\\n                          {{project.viewValue}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- المسمى الوظيفي المطلوب</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"ادخل المسمى الوظيفي المطلوب...\\\" type=\\\"text\\\" [formControl]=\\\"job_Name\\\"\\n                        name=\\\"job_Name\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- المهارات الوظيفية</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"اختر المهارات الوظيفية...\\\" [formControl]=\\\"job_skills\\\" name=\\\"job_skills\\\"\\n                        multiple>\\n                        <mat-option *ngFor=\\\"let skill of skillList\\\" [value]=\\\"skill\\\">{{skill}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- الدولة</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"اختر الدولة...\\\" formControlName=\\\"country\\\" name=\\\"country\\\">\\n                        <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.value\\\">\\n                          {{country.viewValue}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- المدينة</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"اختر المدينة...\\\" formControlName=\\\"city\\\" name=\\\"city\\\">\\n                        <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.value\\\">\\n                          {{city.viewValue}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- التخصص العام</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"ادخل التخصص العام...\\\" type=\\\"text\\\" formControlName=\\\"public_Major\\\"\\n                        name=\\\"public_Major\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- ساعات العمل اليومية</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"ادخل ساعات العمل اليومية...\\\" type=\\\"number\\\" formControlName=\\\"work_hours\\\"\\n                        name=\\\"work_hours\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- ايام العمل</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"ادخل ايام العمل...\\\" type=\\\"number\\\" formControlName=\\\"work_days\\\" name=\\\"work_days\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- الراتب</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"الراتب...\\\" type=\\\"number\\\" formControlName=\\\"salary\\\" name=\\\"salary\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- الجنس</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"الجنس...\\\" formControlName=\\\"gender\\\" name=\\\"gender\\\">\\n                        <mat-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.value\\\">\\n                          {{gender.viewValue}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- المهارات الشخصية</label>\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"المهارات الشخصية...\\\" [formControl]=\\\"personal_Skills\\\" name=\\\"personal_Skills\\\"\\n                        multiple>\\n                        <mat-option *ngFor=\\\"let personal_Skill of personal_SkillList\\\" [value]=\\\"personal_Skill\\\">{{personal_Skill}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <label class=\\\"bmd-label-floating custom-label\\\">- رقم الجوال</label>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"رقم الجوال...\\\" type=\\\"tel\\\" formControlName=\\\"required_Number\\\" name=\\\"required_Number\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card-footer\\\">\\n                      <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-fill btn-primary\\\">حفظ</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport{JobService} from './job.service'\n\n@Component({\n  selector: 'app-add-job',\n  templateUrl: './add-job.component.html',\n  styleUrls: ['./add-job.component.css']\n})\nexport class AddJobComponent implements OnInit {\n\n  constructor(public rest:JobService, private route: ActivatedRoute, private router: Router,private fb: FormBuilder) { }\n\n  addProjcetForm: FormGroup;\n  selectedValue: string;\n\n  contracts = [];\n  currentcontract: string[];\n  cities = [];\n  currentcity: string[];\n  projects = [];\n  currentproject: string[];\n  countries = [];\n  currentcountry: string[];\n\n  selectTheme = 'primary';\n\n  currentgender: string[];\n  genders = [\n    {value: 'male', viewValue: 'ذكر'},\n    {value: 'female', viewValue: 'انثى'},\n  ];\n\n  languages = new FormControl();\n  languageList: string[] = ['العربية', 'الانجليزية', 'الفرنسية', 'الاسبانية', 'الايطالية'];\n\n  skills = new FormControl();\n  skillList: string[] = ['التصوير الفوتوغرافي', 'الرسم', 'التصميم'];\n\n  personal_Skills = new FormControl();\n  personal_SkillList: string[] = ['الإلقاء', 'التعبير'];\n\n  // postuserinfo() {\n  //   console.log(this.addProjcetForm.value);\n  //   this.rest.postuserinfo(this.addProjcetForm.value).subscribe((result) => {\n  //     this.router.navigate(['/dashboard/']);\n  //   }, (err) => {\n  //     console.log(err);\n  //   });\n  // }\n\n  getcontracts() {\n    this.contracts = [];\n    this.rest.getcontracts().subscribe((data: {}) => {\n      console.log(data);\n      for (let key in data) {\n          this.contracts.push({value:data[key]._id, viewValue:data[key].contractName});\n      }\n      console.log(this.contracts);\n    });\n  }\n\n  getprojects() {\n    this.projects = [];\n    this.rest.getprojects().subscribe((data: {}) => {\n      console.log(data);\n      for (let key in data) {\n          this.projects.push({value:data[key]._id, viewValue:data[key].projectName});\n      }\n      console.log(this.projects);\n    });\n  }\n\n  getcountry() {\n    this.countries = [];\n    this.rest.getcountry().subscribe((data: {}) => {\n      console.log(data);\n      for (let key in data) {\n          this.countries.push({value:data[key]._id, viewValue:data[key].countryName});\n      }\n      console.log(this.countries);\n    });\n  }\n\n  getcity() {\n    this.cities = [];\n    this.rest.getcity().subscribe((data: {}) => {\n      console.log(data);\n      for (let key in data) {\n          this.cities.push({value:data[key]._id, viewValue:data[key].cityName});\n      }\n      console.log(this.cities);\n    });\n  }\n\n\n  ngOnInit() {\n    this.getcontracts();\n    this.getprojects();\n    this.getcountry();\n    this.getcity();\n\n    this.addProjcetForm = this.fb.group({\n      contract: new FormControl(),\n      project:  new FormControl(),\n      job_Name:  new FormControl(),\n      job_skills: new FormControl(),\n      country: new FormControl(),\n      city: new FormControl(),\n      public_Major: new FormControl(),\n      work_hours: new FormControl(),\n      work_days: new FormControl(),\n      salary: new FormControl(),\n      gender: new FormControl(),\n      personal_Skills: new FormControl(),\n      required_Number: new FormControl(),\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddJobComponent } from './add-job.component';\nimport { AddJobRoutes } from './add-job.routing';\n\n\n\nimport { NouisliderModule } from 'ng2-nouislider';\nimport { TagInputModule } from 'ngx-chips';\nimport { SelectModule } from 'ng2-select';\nimport { FormGroup } from '@angular/forms';\n\n\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../app.module';\n\n@NgModule({\n  declarations: [AddJobComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AddJobRoutes),\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    NouisliderModule,\n    TagInputModule,\n  ]\n})\nexport class AddJobModule { }\n","import { Routes } from '@angular/router';\n\nimport { AddJobComponent } from './add-job.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nexport const AddJobRoutes: Routes = [\n    {\n\n      path: '',\n      children: [ {\n        path: '',\n        component: AddJobComponent\n    }]\n}\n];","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { JobData } from './job-data.model';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nconst BackUrl = 'https://cors-anywhere.herokuapp.com/https://ptway-dev.herokuapp.com/api';\n\n@Injectable({ providedIn: 'root' })\n\nexport class JobService {\n\n    private job: JobData[] = [];\n    private jobsUpdated = new Subject<{ posts: JobData[], jobCount: number }>();\n\n    constructor(private http: HttpClient, private router: Router) { }\n\n    private extractData(res: Response) {\n        let body = res;\n        return body || {};\n    }\n\n    addJob(data: any) {\n        this.http\n            .post<{ job: JobData }>(BackUrl + '/postjob', data)\n            .subscribe(responseData => {\n                this.router.navigate(['/']);\n            });\n    }\n\n    sendJob(data: any) {\n        this.http\n            .post(BackUrl + '/send/Jobad', data)\n            .subscribe(responseData => {\n                this.router.navigate(['/']);\n            });\n    }\n\n    // getJobs() {\n    //     this.http.get(BackUrl + '/getjobs').subscribe(data => {\n    //         console.log(data);\n    //     });\n    // }\n\n    getJobs(): Observable<any> {\n        return this.http.get(BackUrl + '/getjobs').pipe(\n            map(this.extractData));\n    }\n\n\n    getJob(id: String) {\n        this.http\n            .get(BackUrl + '/getjob?id=' + id)\n            .subscribe(data => {\n                console.log(data);\n            });\n    }\n\n    deleteJob(id: String) {\n        this.http\n            .delete(BackUrl + '/deletejob?id=' + id).subscribe(() => {\n                console.log('Deleted');\n            });\n    }\n\n    // getcountry() {\n    //     this.http\n    //         .get(BackUrl + '/getcountry').subscribe(data => {\n    //             console.log(data);\n    //             return data;\n    //         });\n    // }\n    getcountry(): Observable<any> {\n        return this.http.get(BackUrl + '/getcountry').pipe(\n            map(this.extractData));\n    }\n\n    // getcity() {\n    //     this.http\n    //         .get(BackUrl + '/getcity').subscribe(data => {\n    //             console.log(data);\n    //             return data;\n    //         });\n    // }\n\n    getcity(): Observable<any> {\n        return this.http.get(BackUrl + '/getcity').pipe(\n            map(this.extractData));\n    }\n\n    getsectors() {\n        this.http\n            .get(BackUrl + '/getsectors').subscribe(data => {\n                console.log(data);\n                return data;\n            });\n    }\n\n    getspecialization() {\n        this.http\n            .get(BackUrl + '/getspec').subscribe(data => {\n                console.log(data);\n                return data;\n            });\n    }\n\n    // getcontracts() {\n    //     this.http\n    //     .get(BackUrl + '/getcontracts').subscribe(data =>{\n    //         console.log(data);\n    //         return data;\n    //     });\n    // }\n\n    getcontracts(): Observable<any> {\n        return this.http.get(BackUrl + '/getcontracts').pipe(\n            map(this.extractData));\n    }\n\n    // getprojects() {\n    //     this.http\n    //         .get(BackUrl + '/getprojects')\n    //         .subscribe(data => {\n    //             console.log(data);\n    //         });\n    // }\n\n    getprojects(): Observable<any> {\n        return this.http.get(BackUrl + '/getprojects').pipe(\n            map(this.extractData));\n    }\n\n\n\n}"],"sourceRoot":""}