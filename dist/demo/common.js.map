{"version":3,"sources":["webpack:///./src/app/add-job/job.service.ts","webpack:///./src/app/add-project/project.service.ts","webpack:///./src/app/add-user-info/mime-type.validator.ts","webpack:///./src/app/my-offers/offer.service.ts","webpack:///./src/app/sign-up/sign-up.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { JobData } from './job-data.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nconst BackUrl = 'https://ptway-dev.herokuapp.com/api';\r\nimport swal from 'sweetalert2';\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class JobService {\r\n\r\n    private job: JobData[] = [];\r\n    private jobsUpdated = new Subject<{ posts: JobData[], jobCount: number }>();\r\n    jobData : Object;\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res;\r\n        return body || {};\r\n    }\r\n\r\n    addJob(data: any) {\r\n        this.http\r\n            .post(BackUrl + '/postjob', data)\r\n            .subscribe((responseData: any) => {\r\n                console.log(responseData);\r\nthis.router.navigate(['/my-projects']);\r\n                this.showSwal('secc');\r\n                this.jobData = {\r\n                    country: responseData.country,\r\n                    city: responseData.city,\r\n                    gender: responseData.gender,\r\n                    personal_Skills: responseData.personal_Skills,\r\n                    public_Major: responseData.public_Major,\r\n                    jobAd: responseData._id\r\n\r\n                }\r\n\r\n                this.http\r\n                .post(BackUrl + '/send/Jobad', this.jobData);\r\n            });\r\n\r\n      \r\n    }\r\n\r\n    applyJob(jobAd) {\r\n        jobAd = {\r\n            jobAd: jobAd\r\n        }\r\n        this.http.post(BackUrl + '/postBodyC', jobAd).subscribe(result =>{\r\n            this.router.navigate(['/my-cv']);\r\n        })\r\n    }\r\n\r\n    sendJob(data: any) {\r\n        this.http\r\n            .post(BackUrl + '/send/Jobad', data)\r\n            .subscribe(responseData => {\r\n                this.router.navigate(['/']);\r\n            });\r\n    }\r\n\r\n    getJobs(id: String) {\r\n        return this.http.get<{jobNames: [String],  count: Number, id: [String]}>(BackUrl + '/get/jobs?projectid='+ id)\r\n    }\r\n\r\n  \r\n\r\n\r\n    getJob(id: String) {\r\n       return this.http\r\n            .get(BackUrl + '/getjob?id=' + id)\r\n           \r\n            ;\r\n    }\r\n    \r\n    deleteJob(id: String) {\r\n      return this.http\r\n            .delete(BackUrl + '/deletejob?id=' + id);\r\n    }\r\n\r\n    // getcountry() {\r\n    //     this.http\r\n    //         .get(BackUrl + '/getcountry').subscribe(data => {\r\n    //             console.log(data);\r\n    //             return data;\r\n    //         });\r\n    // }\r\n    getcountry(): Observable<any> {\r\n        return this.http.get(BackUrl + '/getcountry').pipe(\r\n            map(this.extractData));\r\n    }\r\n\r\n    // getcity() {\r\n    //     this.http\r\n    //         .get(BackUrl + '/getcity').subscribe(data => {\r\n    //             console.log(data);\r\n    //             return data;\r\n    //         });\r\n    // }\r\n\r\n    getcity(): Observable<any> {\r\n        return this.http.get(BackUrl + '/getcity').pipe(\r\n            map(this.extractData));\r\n    }\r\n\r\n    getsectors() {\r\n        this.http\r\n            .get(BackUrl + '/getsectors').subscribe(data => {\r\n                console.log(data);\r\n                return data;\r\n            });\r\n    }\r\n\r\n    getspecialization() {\r\n        this.http\r\n            .get(BackUrl + '/getspec').subscribe(data => {\r\n                console.log(data);\r\n                return data;\r\n            });\r\n    }\r\n\r\n    // getcontracts() {\r\n    //     this.http\r\n    //     .get(BackUrl + '/getcontracts').subscribe(data =>{\r\n    //         console.log(data);\r\n    //         return data;\r\n    //     });\r\n    // }\r\n\r\n    getcontracts(): Observable<any> {\r\n        return this.http.get(BackUrl + '/getcontracts').pipe(\r\n            map(this.extractData));\r\n    }\r\n\r\n    // getprojects() {\r\n    //     this.http\r\n    //         .get(BackUrl + '/getprojects')\r\n    //         .subscribe(data => {\r\n    //             console.log(data);\r\n    //         });\r\n    // }\r\n\r\n    getprojects(id: String) {\r\n        return this.http\r\n        .get<{projectName: [String],  count: Number, id: [String]}>(BackUrl + '/getprojects?id='+ id)\r\n    }\r\n\r\n    showSwal(type){\r\n        if (type == 'secc') {\r\n        swal({\r\n          title: \"تمت عملية الحذف بنجاح!\",\r\n          buttonsStyling: false,\r\n          confirmButtonText:'نعم',\r\n          type:'success',\r\n          confirmButtonClass:'btn btn-success'\r\n        }).catch(swal.noop)\r\n      }\r\n\r\n}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ProjectData } from './project-data.model';\r\nimport swal from 'sweetalert2';\r\nconst BackUrl = 'https://ptway-dev.herokuapp.com/api';\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class ProjectService {\r\n\r\n    // headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\r\n\r\n    private project: ProjectData[] = [];\r\n    projectId: String;\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    addproject(data: any) {\r\n      this.http\r\n      .post<{project: ProjectData, _id: String}>(BackUrl + '/postproject' , data)\r\n      .subscribe(responseData => {\r\n        this.showSwal('secc');\r\n        this.projectId = responseData._id;\r\n          console.log(this.projectId);\r\n\r\n         this.router.navigate(['/my-projects']);\r\n      });\r\n    }\r\n\r\n    getprojects() {\r\n        return this.http\r\n        .get<{projectName: [String],  count: Number, id: [String]}>(BackUrl + '/getprojects')\r\n    }\r\n\r\n    getproject(id: String) {\r\n       return this.http\r\n        .get<{projectName: String,  projectDescription: String, id: String}>(BackUrl + '/getproject?id=' + id);\r\n        \r\n    }\r\n\r\n    updateProject( data: any) {\r\n        const response =  this.http\r\n        .put(BackUrl+ '/put/project', data,{ responseType: 'text'})\r\n        .subscribe(responseData => {\r\n           this.router.navigate(['/my-projects']);\r\n        });;\r\n    }\r\n\r\n    deleteproject(id: String) {\r\n     return this.http\r\n        .delete(BackUrl + '/deleteproject?id=' + id);\r\n    }\r\n    showSwal(type){\r\n        if (type == 'secc') {\r\n        swal({\r\n          title: \"تمت عملية الحفظ بنجاح!\",\r\n          buttonsStyling: false,\r\n          confirmButtonClass: 'btn btn-success',\r\n          confirmButtonText:'نعم',\r\n          type:'success',\r\n        }).catch(swal.noop)\r\n      } \r\n\r\n}\r\n}","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\nif (typeof(control.value) === 'string') {\r\nreturn of(null);\r\n}\r\n\r\n\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener('loadend', () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = '';\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case '89504e47':\r\n            isValid = true;\r\n            break;\r\n          case 'ffd8ffe0':\r\n          case 'ffd8ffe1':\r\n          case 'ffd8ffe2':\r\n          case 'ffd8ffe3':\r\n          case 'ffd8ffe8':\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nconst BackUrl = 'https://ptway-dev.herokuapp.com/api';\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class offerService {\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    getCandidates(id: string) {\r\n       return this.http.get<{candidateNames: [string], username: [string] , count:Number, id:[string]}>(BackUrl+'/getOneCandi?jobAd='+id)\r\n    }\r\n\r\n    addCandidate(data: any) {\r\n        this.http.post(BackUrl+'/postBodyC',data).subscribe(() =>{\r\n            this.router.navigate(['/']);\r\n\r\n        })\r\n    }\r\n\r\n    addAcceptence(data: any) {\r\n        this.http.post(BackUrl+'/postAcc' , data).subscribe(result =>{\r\n            console.log(result)\r\n            this.showSwal('secc');\r\n            this.router.navigate(['/candidates-list']);\r\n        });\r\n    }\r\n\r\n    getAcceptence(id: string) {\r\n        return this.http.get<{AcceptedNames: [string], username: [string] , count:Number, id:[string]}>(BackUrl+'/getOneAccepted?jobAd='+id)\r\n    }\r\n\r\n    startJob(data: any) {\r\n        this.http.post(BackUrl+'/start/job', data).subscribe(result =>{\r\n            this.showSwal('secc');\r\n            this.router.navigate(['/acceptance-list']);\r\n\r\n        })\r\n    }\r\n\r\n    endJob(data: any) {\r\n        const response = this.http.post(BackUrl+'/end/job', data,{ responseType: 'text'}).subscribe(result =>{\r\n            this.showSwal('secc');\r\n            this.router.navigate(['/acceptance-list']);\r\n            \r\n\r\n        })\r\n    }\r\n    showSwal(type){\r\n        if (type == 'secc') {\r\n        swal({\r\n          title: \"تمت العملية بنجاح!\",\r\n          buttonsStyling: false,\r\n          confirmButtonClass: 'btn btn-success',\r\n          confirmButtonText:'نعم',\r\n          type:'success',\r\n        }).catch(swal.noop)\r\n      } \r\n\r\n}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SignUpData } from './sign-up-data.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { ErrorHandler } from \"@angular/core\";\r\n// import { UNAUTHORIZED, BAD_REQUEST, FORBIDDEN } from \"http-status-codes\";\r\n// import { ToastsManager, Toast, ToastOptions } from \"ng6-toastr\";\r\n\r\nconst BackUrl = 'https://ptway-dev.herokuapp.com/api';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignUpService implements ErrorHandler {\r\n  // static readonly REFRESH_PAGE_ON_TOAST_CLICK_MESSAGE: string = \"An error occurred: Please click this message to refresh\";\r\n  // static readonly DEFAULT_ERROR_TITLE: string = \"Something went wrong\";\r\n\r\n  public handleError(error: any) {\r\n    // console.error(error);\r\n    // let httpErrorCode = error.httpErrorCode;\r\n    // switch (httpErrorCode) {\r\n    //   case UNAUTHORIZED:\r\n    //     this.router.navigateByUrl(\"/sign0in\");\r\n    //     break;\r\n    //   case FORBIDDEN:\r\n    //     this.router.navigateByUrl(\"/error-message\");\r\n    //     break;\r\n    //   case BAD_REQUEST:\r\n    //     this.showError(error.message);\r\n    //     break;\r\n    //   default:\r\n    //     this.showError(SignUpService.REFRESH_PAGE_ON_TOAST_CLICK_MESSAGE);\r\n    // }\r\n  }\r\n  // private showError(message: string) {\r\n  //   this.toastManager.error(message, SignUpService.DEFAULT_ERROR_TITLE, { dismiss: 'controlled' }).then((toast: Toast) => {\r\n  //     let currentToastId: number = toast.id;\r\n  //     this.toastManager.onClickToast().subscribe(clickedToast => {\r\n  //       if (clickedToast.id === currentToastId) {\r\n  //         this.toastManager.dismissToast(toast);\r\n  //         window.location.reload();\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  // private job: SignUpData[] = [];\r\n  // private jobsUpdated = new Subject<{ posts: SignUpData[], jobCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || {};\r\n  }\r\n  getsectors(): Observable<any> {\r\n    return this.http.get(BackUrl + '/getsectors').pipe(\r\n      map(this.extractData));\r\n  }\r\n\r\n  getspecialization(): Observable<any> {\r\n    return this.http.get(BackUrl + '/getspec').pipe(\r\n      map(this.extractData));\r\n  }\r\n  // postuserRegistreing(data:any): Observable<any> {\r\n  //   console.log(data);\r\n  //   return this.http.post<any>(BackUrl + '/userRegistreing', JSON.stringify(data), httpOptions).pipe(\r\n  //     tap((data) => console.log(`user Registre succes w/ id=${data.id}`)),\r\n  //     catchError(this.handleError<any>('userRegistreing'))\r\n  //   );\r\n  // }\r\n\r\n  // companyRegistreing(data:any): Observable<any> {\r\n  //   console.log(data);\r\n  //   return this.http.post<any>(endpoint + 'api/companyRegistreing', JSON.stringify(data), httpOptions).pipe(\r\n  //     tap((data) => console.log(`comapny Registre succes w/ id=${data.id}`)),\r\n  //     catchError(this.handleError<any>('companyRegistreing'))\r\n  //   );\r\n  // }\r\n\r\n  // private handleError<T> (operation = 'operation', result?: T) {\r\n  //   return (error: any): Observable<T> => {\r\n\r\n  //     // TODO: send the error to remote logging infrastructure\r\n  //     console.error(error); // log to console instead\r\n\r\n  //     // TODO: better job of transforming error for user consumption\r\n  //     console.log(`${operation} failed: ${error.message}`);\r\n\r\n  //     // Let the app keep running by returning an empty result.\r\n  //     return of(result as T);\r\n  //   };\r\n  // }\r\n}\r\n"],"sourceRoot":""}