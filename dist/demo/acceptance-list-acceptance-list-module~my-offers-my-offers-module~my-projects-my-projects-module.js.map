{"version":3,"sources":["webpack:///./node_modules/@toverux/ngx-sweetalert2/esm5/toverux-ngx-sweetalert2.js"],"names":[],"mappings":"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DAAmD,WAAW;AAC9D;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA,mDAAmD;AACnD,KAAK,OAAO,sEAAwB,GAAG;AACvC,KAAK,OAAO,sDAAQ,GAAG;AACvB,KAAK,OAAO,4DAAc,GAAG;AAC7B,KAAK,OAAO,yDAAW,GAAG;AAC1B,KAAK,4BAA4B;AACjC,KAAK,oCAAoC,OAAO,kDAAI,EAAE,IAAI;AAC1D,EAAE;AACF;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,gDAAgD,WAAW;;AAEsH;AACjL","file":"acceptance-list-acceptance-list-module~my-offers-my-offers-module~my-projects-my-projects-module.js","sourcesContent":["import swal from 'sweetalert2';\r\nimport { InjectionToken, ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, ComponentFactoryResolver, Directive, HostListener, ViewContainerRef, TemplateRef, ApplicationRef, Host, Injector, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nvar SwalPartialTargets = /** @class */ (function () {\r\n    function SwalPartialTargets() {\r\n        this.title = function () { return swal.getTitle(); };\r\n        this.content = function () { return swal.getContent(); };\r\n        this.buttonsWrapper = function () { return swal.getButtonsWrapper(); };\r\n        this.actions = function () { return swal.getActions(); };\r\n        this.confirmButton = function () { return swal.getConfirmButton(); };\r\n        this.cancelButton = function () { return swal.getCancelButton(); };\r\n        this.footer = function () { return swal.getFooter(); };\r\n    }\r\n    return SwalPartialTargets;\r\n}());\r\nvar SwalDefaults = new InjectionToken('SwalDefaults');\r\nfunction swalDefaultsProvider(options) {\r\n    if (options === void 0) { options = {}; }\r\n    return {\r\n        provide: SwalDefaults,\r\n        useValue: options\r\n    };\r\n}\r\nvar SwalComponent = /** @class */ (function () {\r\n    function SwalComponent(defaultSwalOptions) {\r\n        this.defaultSwalOptions = defaultSwalOptions;\r\n        this.beforeOpen = new EventEmitter();\r\n        this.open = new EventEmitter();\r\n        this.close = new EventEmitter();\r\n        this.confirm = new EventEmitter();\r\n        this.cancel = new EventEmitter();\r\n        this.nativeSwal = swal;\r\n        this.isCurrentlyShown = false;\r\n        this.touchedProps = new Set();\r\n        this.markTouched = this.touchedProps.add.bind(this.touchedProps);\r\n        this.show = this.show.bind(this);\r\n    }\r\n    Object.defineProperty(SwalComponent.prototype, \"options\", {\r\n        get: function () {\r\n            var _this = this;\r\n            var options = {};\r\n            this.touchedProps.forEach(function (prop) {\r\n                options[prop] = ((_this))[prop];\r\n            });\r\n            return options;\r\n        },\r\n        set: function (options) {\r\n            Object.assign(this, options);\r\n            Object.keys(options).forEach(this.markTouched);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SwalComponent.prototype.ngOnChanges = function (changes) {\r\n        Object.keys(changes)\r\n            .filter(function (prop) { return prop !== 'options'; })\r\n            .forEach(this.markTouched);\r\n    };\r\n    SwalComponent.prototype.ngOnDestroy = function () {\r\n        if (this.isCurrentlyShown) {\r\n            swal.close();\r\n        }\r\n    };\r\n    SwalComponent.prototype.show = function () {\r\n        var _this = this;\r\n        var options = Object.assign({}, this.defaultSwalOptions, this.options, { onBeforeOpen: function (modalElement) {\r\n                _this.beforeOpen.emit({ modalElement: modalElement });\r\n            }, onOpen: function (modalElement) {\r\n                _this.isCurrentlyShown = true;\r\n                _this.open.emit({ modalElement: modalElement });\r\n            }, onClose: function (modalElement) {\r\n                _this.isCurrentlyShown = false;\r\n                _this.close.emit({ modalElement: modalElement });\r\n            } });\r\n        var promise = swal(options);\r\n        var useRejections = ((options)).useRejections;\r\n        promise.then(function (result) {\r\n            if (useRejections) {\r\n                _this.confirm.emit(result);\r\n            }\r\n            else if ('value' in result) {\r\n                _this.confirm.emit(result.value);\r\n            }\r\n            else {\r\n                _this.cancel.emit(result.dismiss);\r\n            }\r\n        }, function (err) {\r\n            if (useRejections) {\r\n                _this.cancel.emit(err);\r\n            }\r\n        });\r\n        return promise;\r\n    };\r\n    return SwalComponent;\r\n}());\r\nSwalComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'swal',\r\n                template: '',\r\n                changeDetection: ChangeDetectionStrategy.OnPush\r\n            },] },\r\n];\r\nSwalComponent.ctorParameters = function () { return [\r\n    { type: undefined, decorators: [{ type: Inject, args: [SwalDefaults,] },] },\r\n]; };\r\nSwalComponent.propDecorators = {\r\n    \"title\": [{ type: Input },],\r\n    \"titleText\": [{ type: Input },],\r\n    \"text\": [{ type: Input },],\r\n    \"html\": [{ type: Input },],\r\n    \"footer\": [{ type: Input },],\r\n    \"type\": [{ type: Input },],\r\n    \"backdrop\": [{ type: Input },],\r\n    \"toast\": [{ type: Input },],\r\n    \"target\": [{ type: Input },],\r\n    \"input\": [{ type: Input },],\r\n    \"width\": [{ type: Input },],\r\n    \"padding\": [{ type: Input },],\r\n    \"background\": [{ type: Input },],\r\n    \"position\": [{ type: Input },],\r\n    \"grow\": [{ type: Input },],\r\n    \"customClass\": [{ type: Input },],\r\n    \"timer\": [{ type: Input },],\r\n    \"animation\": [{ type: Input },],\r\n    \"allowOutsideClick\": [{ type: Input },],\r\n    \"allowEscapeKey\": [{ type: Input },],\r\n    \"allowEnterKey\": [{ type: Input },],\r\n    \"showConfirmButton\": [{ type: Input },],\r\n    \"showCancelButton\": [{ type: Input },],\r\n    \"confirmButtonText\": [{ type: Input },],\r\n    \"cancelButtonText\": [{ type: Input },],\r\n    \"confirmButtonColor\": [{ type: Input },],\r\n    \"cancelButtonColor\": [{ type: Input },],\r\n    \"confirmButtonClass\": [{ type: Input },],\r\n    \"cancelButtonClass\": [{ type: Input },],\r\n    \"confirmButtonAriaLabel\": [{ type: Input },],\r\n    \"cancelButtonAriaLabel\": [{ type: Input },],\r\n    \"buttonsStyling\": [{ type: Input },],\r\n    \"reverseButtons\": [{ type: Input },],\r\n    \"focusConfirm\": [{ type: Input },],\r\n    \"focusCancel\": [{ type: Input },],\r\n    \"showCloseButton\": [{ type: Input },],\r\n    \"closeButtonAriaLabel\": [{ type: Input },],\r\n    \"showLoaderOnConfirm\": [{ type: Input },],\r\n    \"preConfirm\": [{ type: Input },],\r\n    \"imageUrl\": [{ type: Input },],\r\n    \"imageWidth\": [{ type: Input },],\r\n    \"imageHeight\": [{ type: Input },],\r\n    \"imageAlt\": [{ type: Input },],\r\n    \"imageClass\": [{ type: Input },],\r\n    \"inputPlaceholder\": [{ type: Input },],\r\n    \"inputValue\": [{ type: Input },],\r\n    \"inputOptions\": [{ type: Input },],\r\n    \"inputAutoTrim\": [{ type: Input },],\r\n    \"inputAttributes\": [{ type: Input },],\r\n    \"inputValidator\": [{ type: Input },],\r\n    \"inputClass\": [{ type: Input },],\r\n    \"progressSteps\": [{ type: Input },],\r\n    \"currentProgressStep\": [{ type: Input },],\r\n    \"progressStepsDistance\": [{ type: Input },],\r\n    \"beforeOpen\": [{ type: Output },],\r\n    \"open\": [{ type: Output },],\r\n    \"close\": [{ type: Output },],\r\n    \"confirm\": [{ type: Output },],\r\n    \"cancel\": [{ type: Output },],\r\n    \"options\": [{ type: Input },],\r\n};\r\nvar SwalDirective = /** @class */ (function () {\r\n    function SwalDirective(viewContainerRef, resolver) {\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.resolver = resolver;\r\n        this.confirm = new EventEmitter();\r\n        this.cancel = new EventEmitter();\r\n    }\r\n    Object.defineProperty(SwalDirective.prototype, \"swal\", {\r\n        set: function (options) {\r\n            if (options instanceof SwalComponent) {\r\n                this.swalInstance = options;\r\n            }\r\n            else if (Array.isArray(options)) {\r\n                this.swalOptions = swal.argsToParams(options);\r\n            }\r\n            else {\r\n                this.swalOptions = options;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SwalDirective.prototype.ngOnInit = function () {\r\n        if (!this.swalInstance) {\r\n            var factory = this.resolver.resolveComponentFactory(SwalComponent);\r\n            this.swalRef = this.viewContainerRef.createComponent(factory);\r\n            this.swalInstance = this.swalRef.instance;\r\n        }\r\n    };\r\n    SwalDirective.prototype.ngOnDestroy = function () {\r\n        if (this.swalRef) {\r\n            this.swalRef.destroy();\r\n        }\r\n    };\r\n    SwalDirective.prototype.onHostClicked = function (event) {\r\n        var _this = this;\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (this.swalOptions) {\r\n            this.swalInstance.options = this.swalOptions;\r\n        }\r\n        var confirmSub = this.swalInstance.confirm.asObservable().subscribe(function (v) { return _this.confirm.emit(v); });\r\n        var cancelSub = this.swalInstance.cancel.asObservable().subscribe(function (v) { return _this.cancel.emit(v); });\r\n        this.swalInstance.show().then(unsubscribe);\r\n        function unsubscribe() {\r\n            confirmSub.unsubscribe();\r\n            cancelSub.unsubscribe();\r\n        }\r\n    };\r\n    return SwalDirective;\r\n}());\r\nSwalDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[swal]'\r\n            },] },\r\n];\r\nSwalDirective.ctorParameters = function () { return [\r\n    { type: ViewContainerRef, },\r\n    { type: ComponentFactoryResolver, },\r\n]; };\r\nSwalDirective.propDecorators = {\r\n    \"swal\": [{ type: Input },],\r\n    \"confirm\": [{ type: Output },],\r\n    \"cancel\": [{ type: Output },],\r\n    \"onHostClicked\": [{ type: HostListener, args: ['click', ['$event'],] },],\r\n};\r\nvar SwalPartialComponent = /** @class */ (function () {\r\n    function SwalPartialComponent() {\r\n    }\r\n    return SwalPartialComponent;\r\n}());\r\nSwalPartialComponent.decorators = [\r\n    { type: Component, args: [{\r\n                template: '<ng-container *ngTemplateOutlet=\"template\"></ng-container>',\r\n                changeDetection: ChangeDetectionStrategy.OnPush\r\n            },] },\r\n];\r\nSwalPartialComponent.ctorParameters = function () { return []; };\r\nSwalPartialComponent.propDecorators = {\r\n    \"template\": [{ type: Input },],\r\n};\r\nvar SwalPartialDirective = /** @class */ (function () {\r\n    function SwalPartialDirective(resolver, injector, app, templateRef, swalTargets, swalComponent) {\r\n        this.resolver = resolver;\r\n        this.injector = injector;\r\n        this.app = app;\r\n        this.templateRef = templateRef;\r\n        this.swalTargets = swalTargets;\r\n        this.swalComponent = swalComponent;\r\n    }\r\n    SwalPartialDirective.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.beforeOpenSubscription = this.swalComponent.beforeOpen.asObservable().subscribe(function () {\r\n            var targetEl = _this.swalPartial ? _this.swalPartial() : _this.swalTargets.content();\r\n            var factory = _this.resolver.resolveComponentFactory(SwalPartialComponent);\r\n            _this.partialRef = factory.create(_this.injector, [], targetEl);\r\n            _this.partialRef.instance.template = _this.templateRef;\r\n            _this.app.attachView(_this.partialRef.hostView);\r\n        });\r\n        this.closeSubscription = this.swalComponent.close.asObservable().subscribe(function () {\r\n            _this.app.detachView(_this.partialRef.hostView);\r\n            _this.partialRef.destroy();\r\n        });\r\n    };\r\n    SwalPartialDirective.prototype.ngOnDestroy = function () {\r\n        this.beforeOpenSubscription.unsubscribe();\r\n        this.closeSubscription.unsubscribe();\r\n    };\r\n    return SwalPartialDirective;\r\n}());\r\nSwalPartialDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[swalPartial]'\r\n            },] },\r\n];\r\nSwalPartialDirective.ctorParameters = function () { return [\r\n    { type: ComponentFactoryResolver, },\r\n    { type: Injector, },\r\n    { type: ApplicationRef, },\r\n    { type: TemplateRef, },\r\n    { type: SwalPartialTargets, },\r\n    { type: SwalComponent, decorators: [{ type: Host },] },\r\n]; };\r\nSwalPartialDirective.propDecorators = {\r\n    \"swalPartial\": [{ type: Input },],\r\n};\r\nvar SweetAlert2Module = /** @class */ (function () {\r\n    function SweetAlert2Module() {\r\n    }\r\n    SweetAlert2Module.forRoot = function (defaultSwalOptions) {\r\n        return {\r\n            ngModule: SweetAlert2Module,\r\n            providers: [swalDefaultsProvider(defaultSwalOptions)]\r\n        };\r\n    };\r\n    return SweetAlert2Module;\r\n}());\r\nSweetAlert2Module.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    SwalComponent, SwalPartialDirective, SwalPartialComponent,\r\n                    SwalDirective\r\n                ],\r\n                providers: [\r\n                    SwalPartialTargets\r\n                ],\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                exports: [\r\n                    SwalComponent, SwalPartialDirective,\r\n                    SwalDirective\r\n                ],\r\n                entryComponents: [\r\n                    SwalComponent, SwalPartialComponent\r\n                ]\r\n            },] },\r\n];\r\nSweetAlert2Module.ctorParameters = function () { return []; };\r\n\r\nexport { SwalPartialTargets, SwalComponent, SwalDirective, SwalPartialDirective, SweetAlert2Module, SwalDefaults as ɵa, swalDefaultsProvider as ɵb, SwalPartialComponent as ɵc };\r\n//# sourceMappingURL=toverux-ngx-sweetalert2.js.map\r\n"],"sourceRoot":""}